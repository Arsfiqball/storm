services:
  app:
    build:
      context: .
      dockerfile: build/docker/dev/Dockerfile
    volumes:
      - ./:/app/
    restart: on-failure
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      zipkin:
        condition: service_healthy
    environment:
      # Use test environment
      STORM_SERVE_ADDR: ":3000"
      STORM_SERVE_MONITOR: ":8086"
      STORM_DATABASE_URL: "postgres://admin:admin@postgresql:5432/app?sslmode=disable"
      STORM_REDIS_URL: "redis://redis:6379/0"
      STORM_TELEMETRY_ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
      STORM_TELEMETRY_SERVICE_NAME: "storm-service"
    healthcheck:
      test: ["CMD-SHELL", "cat", "/tmp/app_server_live"]
      interval: 5s
      timeout: 10s
      retries: 5
  postgresql:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: app
      PGDATA: /data/postgres
    volumes:
      - postgresql_data:/data/postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d app -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  zipkin:
    image: openzipkin/zipkin:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9411/health"]
      interval: 5s
      timeout: 3s
      retries: 5
  migrate:
    image: migrate/migrate
    volumes:
      - ./database/:/database
    command:
      - "-path"
      - "/database/postgresql/migrations"
      - "-database"
      - "postgres://admin:admin@postgresql:5432/app?sslmode=disable"
      - "up"
    depends_on:
      postgresql:
        condition: service_healthy

volumes:
  postgresql_data:
  redis_data:
